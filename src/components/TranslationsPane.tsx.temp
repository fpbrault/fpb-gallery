// src/components/TranslationsPane.js

import React from 'react';
import PropTypes from 'prop-types';
import { client } from '@/sanity/lib/client';

class TranslationsPane extends React.Component {
  static propTypes = {
    document: PropTypes.object, // the document being viewed
  };

  state = {
    translations: [],
  };

  componentDidMount() {
    const { document } = this.props;

    if (document && document._id) {
      this.fetchTranslations(document._id);
    }
  }

  fetchTranslations = async (documentId: any) => {
    const query = `*[_type == "translation.metadata" && references("${documentId}")]{
      "translations": translations[].value->{
        title,
        slug,
        language
      }
    }.translations`;

    try {
      const translations = await client.fetch(query);
      this.setState({ translations });
    } catch (error) {
      console.error('Error fetching translations:', error);
    }
  };

  render() {
    const { translations } = this.state;

    return (
      <div>
        <h2>Translations</h2>
        <ul>
          {translations && translations.map((translation) => (
            <li key={translation?.slug}>{`${translation?.language}: ${translation?.title}`}</li>
          ))}
        </ul>
      </div>
    );
  }
}

export default TranslationsPane;
